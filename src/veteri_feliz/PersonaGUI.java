/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package veteri_feliz;

import Veteri_Feliz.ArchivoPlano;
import java.awt.Color;
import static java.awt.font.GlyphMetrics.COMPONENT;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juanj
 */
public class PersonaGUI extends javax.swing.JFrame {

    ArrayList<Persona> ListaPersona;
    ArrayList<Familia> ListaFamilia;
    ArrayList<Cliente> ListaCliente;
    
    public PersonaGUI() {
        initComponents();
        ListaPersona= new ArrayList<>();
        ListaFamilia= new ArrayList<>();
        ListaCliente= new ArrayList<>();
        getContentPane().setBackground(new Color(255, 202, 156));
        jButton_CargarActionPerformed(null); // Recargar la tabla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Cedula = new javax.swing.JTextField();
        jTextField_Apellido = new javax.swing.JTextField();
        jTextField_Nombre = new javax.swing.JTextField();
        jButton_GuardarPersona = new javax.swing.JButton();
        jButton_Eliminar = new javax.swing.JButton();
        jButton_Cargar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_datos = new javax.swing.JTable();
        jButton_Editar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(222, 222, 175));

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 36)); // NOI18N
        jLabel1.setText("Datos de Persona");

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel2.setText("Cedula: ");

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel3.setText("Nombre: ");

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel4.setText("Apellido: ");

        jTextField_Cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_CedulaActionPerformed(evt);
            }
        });

        jTextField_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_NombreActionPerformed(evt);
            }
        });

        jButton_GuardarPersona.setText("Guardar");
        jButton_GuardarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarPersonaActionPerformed(evt);
            }
        });

        jButton_Eliminar.setText("Eliminar");
        jButton_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarActionPerformed(evt);
            }
        });

        jButton_Cargar.setText("Cargar");
        jButton_Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CargarActionPerformed(evt);
            }
        });

        jTable_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Apellido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_datos);

        jButton_Editar.setText("Editar");
        jButton_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_Cedula, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addComponent(jTextField_Apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addComponent(jTextField_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton_Cargar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton_GuardarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel1))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_Cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_Apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Cargar)
                    .addComponent(jButton_GuardarPersona)
                    .addComponent(jButton_Eliminar)
                    .addComponent(jButton_Editar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_CedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_CedulaActionPerformed
        
    }//GEN-LAST:event_jTextField_CedulaActionPerformed

    private void jButton_GuardarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarPersonaActionPerformed
        Persona per =new Persona();
        Familia fam =new Familia();
        Cliente cli =new Cliente();
       
     
        // Validación de campos vacíos en una sola línea
        if (jTextField_Cedula.getText().trim().isEmpty() ||
            jTextField_Nombre.getText().trim().isEmpty() ||
            jTextField_Apellido.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Captura y validación del documento
        try {
            per.Cedula = Integer.parseInt(jTextField_Cedula.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Formato Incorrecto en el documento", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Captura del nombre y apellido (sin necesidad de otra validación porque ya se verificó que no esté vacío)
        per.Nombre = jTextField_Nombre.getText().trim();
        per.Apellido = jTextField_Apellido.getText().trim();
        
        //Captura Datos para familia
        fam.Nombre = jTextField_Nombre.getText().trim();
        fam.Apellido = jTextField_Apellido.getText().trim();
        fam.Cedula = per.Cedula;
        
        //Captura Datos para Cliente
        cli.Nombre = jTextField_Nombre.getText().trim();
        cli.Apellido = jTextField_Apellido.getText().trim();
        cli.Cedula = per.Cedula;
        cli.Numero_Cliente = cli.Numero_Cliente+1;

        // Mensaje de éxito
        JOptionPane.showMessageDialog(null, "Datos capturados correctamente:\nDocumento: " + per.Cedula +
                                      "\nNombre: " + per.Nombre + "\nApellido: " + per.Apellido + "\nCodigo de Cliente: " + cli.Numero_Cliente,"Éxito", JOptionPane.INFORMATION_MESSAGE);
         
       per.setCedula(per.Cedula);
       per.setNombre(per.Nombre);
       per.setApellido(per.Apellido);
       ListaPersona.add(per);
       fam.setCedula(per.Cedula);
       fam.setNombre(per.Nombre);
       fam.setApellido(per.Apellido);
       ListaFamilia.add(fam);
       cli.setCedula(per.Cedula);
       cli.setNombre(per.Nombre);
       cli.setApellido(per.Apellido);
       cli.setNumero_Cliente(cli.Numero_Cliente);
       ListaCliente.add(cli);
       ArchivoPlano.guardarEnArchivo(ListaPersona);
       jButton_CargarActionPerformed(null); // Recargar la tabla
    }//GEN-LAST:event_jButton_GuardarPersonaActionPerformed

    private void jTextField_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_NombreActionPerformed

    private void jButton_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarActionPerformed
        // Validar que el campo no esté vacío
    if (jTextField_Cedula.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor escribe una cédula para eliminar.");
        return;
    }

    try {
        int cedulaAEliminar = Integer.parseInt(jTextField_Cedula.getText().trim());
        ArchivoPlano.eliminarDeArchivo(cedulaAEliminar);
        jButton_CargarActionPerformed(null); // Recargar la tabla después de eliminar
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "La cédula debe ser un número válido.");
    }
    }//GEN-LAST:event_jButton_EliminarActionPerformed

    private void jButton_CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CargarActionPerformed
        // Cargar los estudiantes desde el archivo y agregamos a la lista
        List<Persona> personaCargado = ArchivoPlano.cargarDesdeArchivo();
       
        //Limpiar la tabla y la lista actual para luego cargar los datos
        ListaPersona.clear();
        DefaultTableModel modelo = (DefaultTableModel) jTable_datos.getModel();
        modelo.setRowCount(0);  // Limpiar las filas de la tabla
       
        // Agregar los estudiantes cargados a la lista y a oa tabla
        for (Persona persona : personaCargado) {
            ListaPersona.add(persona);
            modelo.addRow(new Object[] {persona.getCedula(), persona.getNombre(), persona.getApellido()});
        }
    }//GEN-LAST:event_jButton_CargarActionPerformed

    private void jButton_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EditarActionPerformed
        if (jTextField_Cedula.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor escribe una cédula.");
        return;
    }

    try {
        int cedula = Integer.parseInt(jTextField_Cedula.getText().trim());
        String nuevoNombre = jTextField_Nombre.getText().trim();
        String nuevoApellido = jTextField_Apellido.getText().trim();

        ArchivoPlano.modificarEnArchivo(cedula, nuevoNombre, nuevoApellido);
        jButton_CargarActionPerformed(null); // Recargar la tabla

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "La cédula debe ser un número válido.");
    }
    }//GEN-LAST:event_jButton_EditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Cargar;
    private javax.swing.JButton jButton_Editar;
    private javax.swing.JButton jButton_Eliminar;
    private javax.swing.JButton jButton_GuardarPersona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_datos;
    private javax.swing.JTextField jTextField_Apellido;
    private javax.swing.JTextField jTextField_Cedula;
    private javax.swing.JTextField jTextField_Nombre;
    // End of variables declaration//GEN-END:variables
}
